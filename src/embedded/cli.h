/*
 * cli.h
 *
 *  Created on: 25. jun. 2018
 *      Author: Karl
 */

#ifndef SRC_CLI_H_
#define SRC_CLI_H_

#include "FreeRTOS_CLI.h"

/**
 * @brief Registers the defined commands with the CLI, allowing them to be used.
 */
BaseType_t cli_init();

/**
 * @brief Main function for the CLI task
 *
 * The CLI task blocks on a queue into which data is posted by the UART ISR upon reception of data
 * on the serial interface.
 *
 * @param *p Nothing, but must adhere to the FreeRTOS task-function prototype
 */
void cli_task();

/**
 * @brief Implements the read-address command for the CLI.
 *
 * @param *wr_buf A buffer into which the reply (in this case the value at the provided address) is written
 * @param wr_buf_len The size of the buffer pointed to by *wr_buf
 * @param *cmd_str A string containing the received command
 *
 * @return pdTRUE if a partial reply was placed into wr_buf and the function should be called again.
 *         pdFALSE if the complete reply was placed into wr_buf
 */
BaseType_t rd_addr_cli(s8 *wr_buf, size_t wr_buf_len, const s8 *cmd_str);

/**
 * @brief Implements the write-address command for the CLI.
 *
 * @param *wr_buf A buffer into which the reply (in this case nothing) is written
 * @param wr_buf_len The size of the buffer pointed to by *wr_buf
 * @param *cmd_str A string containing the received command
 *
 * @return pdTRUE if a partial reply was placed into wr_buf and the function should be called again.
 *         pdFALSE if the complete reply was placed into wr_buf
 *
 * @note No reply is generated by the write-address command, but the function prototype must still
 *       include a buffer and length in order to satisfy the requirements of a CLI command callback function.
 */
BaseType_t wr_addr_cli(s8 *wr_buf, size_t wr_buf_len, const s8 *cmd_str);

u8 is_hex_enc(u8 *data, u8 len);

/**
 * @brief Defines the read-address command by its signature, description, callback function pointer,
 *        and number of parameters
 */
static const CLI_Command_Definition_t rd_addr_cmd = {
    "rd",
    "rd <addr>: Returns the value stored at <addr>\r\n",
    rd_addr_cli,
    1
};

/**
 * @brief Defines the write-address command by its signature, description, and callback function pointer,
 *        and number of parameters
 */
static const CLI_Command_Definition_t wr_addr_cmd = {
    "wr",
    "wr <addr> <val>: Writes the value <val> to the address <addr>\r\n",
    wr_addr_cli,
    2
};


const CLI_Command_Definition_t* rd_addr_cmd_ptr = &rd_addr_cmd;
const CLI_Command_Definition_t* wr_addr_cmd_ptr = &wr_addr_cmd;

#endif /* SRC_CLI_H_ */
